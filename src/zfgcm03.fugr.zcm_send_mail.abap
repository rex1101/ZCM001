FUNCTION ZCM_SEND_MAIL.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(I_CONF) TYPE  ZCM_SENDMAIL_IMPORT
*"     REFERENCE(IT_MESSAGE_BODY) TYPE  BCSY_TEXT
*"     REFERENCE(IT_ATTACHMENTS) TYPE  RMPS_T_POST_CONTENT OPTIONAL
*"  EXPORTING
*"     REFERENCE(E_RESULT) TYPE  BOOLEAN
*"  TABLES
*"      RECIPIENTS STRUCTURE  ADR6
*"----------------------------------------------------------------------


*Data Declaration
  DATA: LO_SENDER TYPE REF TO IF_SENDER_BCS VALUE IS INITIAL,
        L_RECIPIENT_MAIL TYPE ADR6-SMTP_ADDR.

  DATA : ITAB TYPE TABLE OF SVAL,
         LS_ITAB TYPE SVAL,
         I_RETURN.

  DATA: L_MSG_TYPE TYPE SO_OBJ_TP,
        LO_SEND_REQUEST TYPE REF TO CL_BCS VALUE IS INITIAL.
  DATA: LX_DOCUMENT_BCS TYPE REF TO CX_DOCUMENT_BCS VALUE IS INITIAL,
        ATTACHMENT_SUBJECT TYPE SO_OBJ_DES.

  DATA: LO_RECIPIENT TYPE REF TO IF_RECIPIENT_BCS VALUE IS INITIAL.
  DATA: LS_RECIPIENT LIKE LINE OF RECIPIENTS,
        LS_ATTACHMENT LIKE LINE OF IT_ATTACHMENTS.

  DATA: LS_ZPFB_MLOG TYPE ZCMT0002.


  CREATE OBJECT GO_LOG_UPDATE
    EXPORTING
      MLOG = LS_ZPFB_MLOG.
  CLEAR: E_RESULT.


*  fill configuration field
  GS_GLOBE_MAIL_CONF  = I_CONF.

*  Creat log Info.
*  PERFORM FRM_PARPER_MAIL_LOG.


* setting Mail Sender
  IF GS_GLOBE_MAIL_CONF-SENDER_MAIL IS INITIAL.
    DATA: LV_ADRESS TYPE ADDR3_VAL.
    DATA: LV_USR03 TYPE USR03.
    DATA: LV_ADD TYPE ADR6-SMTP_ADDR.
*****************************************
* get sender email address.
    CALL FUNCTION 'SUSR_USER_ADDRESS_READ'
       EXPORTING
           USER_NAME              = SY-UNAME
*       READ_DB_DIRECTLY       = ' '
       IMPORTING
           USER_ADDRESS           = LV_ADRESS
           USER_USR03             = LV_USR03
       EXCEPTIONS
           USER_ADDRESS_NOT_FOUND = 1
           OTHERS                 = 2.

    SELECT SINGLE SMTP_ADDR
      FROM ADR6 INTO LV_ADD
      WHERE ADDRNUMBER = LV_ADRESS-ADDRNUMBER
      AND PERSNUMBER = LV_ADRESS-PERSNUMBER.

    IF LV_ADD IS INITIAL .
      GS_GLOBE_MAIL_CONF-SENDER_MAIL = 'rex.sun@trelleborg.com'.
    ELSE.
      GS_GLOBE_MAIL_CONF-SENDER_MAIL = LV_ADD.
    ENDIF.

  ENDIF.

  CASE GS_GLOBE_MAIL_CONF-MAILTYPE.
    WHEN 'X'. "
      CLEAR:L_MSG_TYPE.
    WHEN 'H'.
      L_MSG_TYPE = 'HTML'.     " HTML格式

    WHEN OTHERS.
      L_MSG_TYPE = 'RAW'.     " 普通格式
  ENDCASE.

*Prepare Mail Object
  CLASS CL_BCS DEFINITION LOAD.
  LO_SEND_REQUEST = CL_BCS=>CREATE_PERSISTENT( ).

* Message body and subject
  DATA: LO_DOCUMENT TYPE REF TO CL_DOCUMENT_BCS VALUE IS INITIAL.
  LO_DOCUMENT = CL_DOCUMENT_BCS=>CREATE_DOCUMENT(
  I_TYPE = L_MSG_TYPE
   I_TEXT =  IT_MESSAGE_BODY
   I_SUBJECT = GS_GLOBE_MAIL_CONF-SUBJECT ).

*Send  attachment
  LOOP AT IT_ATTACHMENTS INTO LS_ATTACHMENT.
    ATTACHMENT_SUBJECT = LS_ATTACHMENT-SUBJECT.
    TRY.
        LO_DOCUMENT->ADD_ATTACHMENT(
        EXPORTING
        I_ATTACHMENT_TYPE = LS_ATTACHMENT-OBJTP
        I_ATTACHMENT_SUBJECT = ATTACHMENT_SUBJECT

        I_ATT_CONTENT_HEX = LS_ATTACHMENT-CONT_HEX
        I_ATT_CONTENT_TEXT = LS_ATTACHMENT-CONT_TEXT
         ).
      CATCH CX_DOCUMENT_BCS INTO LX_DOCUMENT_BCS.
    ENDTRY.
  ENDLOOP.

* Pass the document to send request
  LO_SEND_REQUEST->SET_DOCUMENT( LO_DOCUMENT ).
  TRY.
      IF GS_GLOBE_MAIL_CONF-SENDER_MAIL IS NOT INITIAL.
        LO_SENDER = CL_CAM_ADDRESS_BCS=>CREATE_INTERNET_ADDRESS( GS_GLOBE_MAIL_CONF-SENDER_MAIL ).
      ENDIF.
* Set sender
      LO_SEND_REQUEST->SET_SENDER(
         EXPORTING
           I_SENDER = LO_SENDER ).
    CATCH CX_ADDRESS_BCS.
      RETURN.
  ENDTRY.
* Set  recipients
  LOOP AT RECIPIENTS INTO LS_RECIPIENT WHERE ENCODE = ''.
    IF LS_RECIPIENT-SMTP_ADDR IS NOT INITIAL.
      L_RECIPIENT_MAIL = LS_RECIPIENT-SMTP_ADDR .
      CONCATENATE L_RECIPIENT_MAIL ';' INTO GO_LOG_UPDATE->GS_MESSAGE-MESSAGE.
      IF SY-MANDT <> '800' .
        L_RECIPIENT_MAIL = 'rex.sun@trelleborg.com'.
        CONCATENATE L_RECIPIENT_MAIL ';' INTO GO_LOG_UPDATE->GS_MESSAGE-MESSAGE.
      ENDIF.
    ELSE.
      L_RECIPIENT_MAIL = 'rex.sun@trelleborg.com'.
    ENDIF.
    TRY.
        LO_RECIPIENT = CL_CAM_ADDRESS_BCS=>CREATE_INTERNET_ADDRESS( L_RECIPIENT_MAIL ).
      CATCH CX_ADDRESS_BCS .
    ENDTRY.

    LO_SEND_REQUEST->ADD_RECIPIENT(
        EXPORTING
        I_RECIPIENT = LO_RECIPIENT
        I_EXPRESS = 'X' ).


  ENDLOOP.


* Set  copys
  LOOP AT RECIPIENTS INTO LS_RECIPIENT WHERE ENCODE = 'C'.
    IF LS_RECIPIENT-SMTP_ADDR IS NOT INITIAL.
      L_RECIPIENT_MAIL = LS_RECIPIENT-SMTP_ADDR .
      IF SY-MANDT <> '800'.
        L_RECIPIENT_MAIL = 'rex.sun@trelleborg.com'.
      ENDIF.
      TRY.
          LO_RECIPIENT = CL_CAM_ADDRESS_BCS=>CREATE_INTERNET_ADDRESS( L_RECIPIENT_MAIL ).
        CATCH CX_ADDRESS_BCS .
      ENDTRY.

    ENDIF.

    LO_SEND_REQUEST->ADD_RECIPIENT(
        EXPORTING
        I_RECIPIENT = LO_RECIPIENT
        I_COPY       = 'X'
        I_EXPRESS = 'X' ).
  ENDLOOP.

  TRY.
      CALL METHOD LO_SEND_REQUEST->SET_STATUS_ATTRIBUTES
        EXPORTING
          I_REQUESTED_STATUS = 'E'
          I_STATUS_MAIL      = 'E'.

* set send immediately flag
      LO_SEND_REQUEST->SET_SEND_IMMEDIATELY( 'X' ).

* Send email
      LO_SEND_REQUEST->SEND(
        EXPORTING
         I_WITH_ERROR_SCREEN = 'X'
        RECEIVING
          RESULT = E_RESULT ).
      COMMIT WORK.
      WAIT UP TO 1 SECONDS.

    CATCH CX_SEND_REQ_BCS.
      E_RESULT = ''.
  ENDTRY.

*  GO_LOG_UPDATE->gs- = GS_GLOBE_MAIL_CONF-SUBJECT.


  IF E_RESULT = 'X'.
    GO_LOG_UPDATE->GS_MESSAGE-TYPE = 'S'.
    CONCATENATE GO_LOG_UPDATE->GS_MESSAGE-MESSAGE '邮件发送成功！' INTO GO_LOG_UPDATE->GS_MESSAGE-MESSAGE.
  ELSE.
    GO_LOG_UPDATE->GS_MESSAGE-TYPE = 'E'.
    CONCATENATE GO_LOG_UPDATE->GS_MESSAGE-MESSAGE '邮件发送失败！' INTO GO_LOG_UPDATE->GS_MESSAGE-MESSAGE.
  ENDIF.

  CALL METHOD GO_LOG_UPDATE->MT_UPDATE_LOG_STATE.

*------------------  add content log begin --------------------------
  DATA: LS_LOG_CTR TYPE ZCMT0004.
  FIELD-SYMBOLS: <FT_RETURN> TYPE ANY TABLE.
  LOOP AT GO_LOG_UPDATE->GT_LOG_CTR INTO LS_LOG_CTR.
    ASSIGN (LS_LOG_CTR-CLASS_ATTRIBUTES) TO <FT_RETURN>.
    IF SY-SUBRC = 0.
      CALL METHOD GO_LOG_UPDATE->MT_SAVE_LOG_ITEM_RETURN
        EXPORTING
          FT_RETURN   = <FT_RETURN>
          IS_ZCMT0004 = LS_LOG_CTR
          UUID        = GO_LOG_UPDATE->GV_LOG_UUID.
    ENDIF.
  ENDLOOP.
*------------------  add content log end --------------------------

  CALL METHOD GO_LOG_UPDATE->FREE.



ENDFUNCTION.
