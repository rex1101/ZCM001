FUNCTION ZCM_EXCEL_UPLOAD.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(IT_FIELDCAT_LVC) TYPE  LVC_T_FCAT OPTIONAL
*"     REFERENCE(IS_OPTIONS) TYPE  ZCM_DOIUPOPTS
*"     REFERENCE(I_FILENAME) TYPE  LOCALFILE OPTIONAL
*"     REFERENCE(I_CALLBACK_PROGRAM) TYPE  SY-REPID OPTIONAL
*"     REFERENCE(I_CALLBACK_CHECK_FIELD) TYPE  FORMNAME OPTIONAL
*"     REFERENCE(I_ATTACHMENTS) TYPE  CHAR1 OPTIONAL
*"  TABLES
*"      T_OUTTAB TYPE  STANDARD TABLE
*"  EXCEPTIONS
*"      PROGRAM_ERROR
*"----------------------------------------------------------------------

 DATA: L_FILENAME TYPE RLGRAP-FILENAME.

  DATA LV_COUNTER TYPE SY-TABIX .
  DATA: LO_UPLOAD_LOG TYPE REF TO ZCL_CM_CUSTOM_LOG .

  GT_FCAT = IT_FIELDCAT_LVC.
  GV_ATTACHMENTS_SAVE = I_ATTACHMENTS.
  GS_UPOPTIONS = IS_OPTIONS.
  G_CALLBACK_PROGRAM       = I_CALLBACK_PROGRAM.
  G_CALLBACK_CHECK_FIELD = I_CALLBACK_CHECK_FIELD.


    CREATE OBJECT LO_UPLOAD_LOG.


  IF GS_UPOPTIONS-TABNAME IS NOT INITIAL.
    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_STRUCTURE_NAME       = GS_UPOPTIONS-TABNAME
      CHANGING
        CT_FIELDCAT            = GT_FCAT
      EXCEPTIONS
        INCONSISTENT_INTERFACE = 1
        PROGRAM_ERROR          = 2
        OTHERS                 = 3.

    DESCRIBE TABLE GT_FCAT LINES LV_COUNTER.
    IF GS_UPOPTIONS-END_COL IS INITIAL.
      GS_UPOPTIONS-END_COL = GS_UPOPTIONS-BEGIN_COL + LV_COUNTER.
    ENDIF.
  ENDIF.
  IF GS_UPOPTIONS-END_ROW IS INITIAL.
    GS_UPOPTIONS-END_ROW   = 65536. "Excel Rows
  ENDIF.

* Check callback parameters
  IF I_CALLBACK_PROGRAM IS INITIAL AND
    ( NOT I_CALLBACK_CHECK_FIELD IS INITIAL ).
    MESSAGE A529(0K) RAISING PROGRAM_ERROR.
  ENDIF.


  IF I_FILENAME IS INITIAL .
    PERFORM FRM_FILE_OPEN_DIALOG USING '文件选择' '文件选择'
                                                   'Excel Files (*.xls)|*.xls'
                                                   L_FILENAME.
  ELSE.
    L_FILENAME = I_FILENAME.
  ENDIF.

  IF L_FILENAME IS NOT INITIAL.

    IF GV_ATTACHMENTS_SAVE = 'X'.
      CALL METHOD LO_UPLOAD_LOG->MT_CREATION_ATTACHMENTS_LOG
        EXPORTING
          IV_LOCALFILE = L_FILENAME.
    ENDIF.
    PERFORM FRM_UPLOAD_DATA USING L_FILENAME.
*Output
    T_OUTTAB[] = <DYN_UPLOAD_TABLE>.
  ENDIF.

  IF T_OUTTAB[] IS NOT INITIAL.
    LO_UPLOAD_LOG->GS_MESSAGE-TYPE = 'S'.
    CONCATENATE LO_UPLOAD_LOG->GS_MESSAGE-MESSAGE '附件上传成功！' INTO LO_UPLOAD_LOG->GS_MESSAGE-MESSAGE.
    IF GV_ATTACHMENTS_SAVE = 'X'.
      CONCATENATE LO_UPLOAD_LOG->GS_MESSAGE-MESSAGE '附件保存成功！' INTO LO_UPLOAD_LOG->GS_MESSAGE-MESSAGE.
    ENDIF.
  ELSE.
    LO_UPLOAD_LOG->GS_MESSAGE-TYPE = 'E'.
    CONCATENATE LO_UPLOAD_LOG->GS_MESSAGE-MESSAGE '邮件发送失败！' INTO LO_UPLOAD_LOG->GS_MESSAGE-MESSAGE.
  ENDIF.

  CALL METHOD LO_UPLOAD_LOG->MT_UPDATE_LOG_STATE.
  CALL METHOD LO_UPLOAD_LOG->FREE.



ENDFUNCTION.
